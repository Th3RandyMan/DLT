[project]
name = "dlt"
version = "0.1.0"
description = "A modern, extensible framework for machine learning and deep learning projects"
readme = "README.md"
authors = [
    { name = "Randall Fowler", email = "rlfowler@ucdavis.edu" }
]
requires-python = ">=3.10"
dependencies = [
    # Core ML/DL frameworks
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "tensorflow>=2.15.0",
    "scikit-learn>=1.4.0",
    
    # Data handling and numerical computing
    "numpy>=1.26.0",
    "pandas>=2.1.0",
    "scipy>=1.11.0",
    
    # Configuration management (Hydra ecosystem)
    "hydra-core>=1.3.2",
    "omegaconf>=2.3.0",
    
    # Optional Lightning integration
    "lightning>=2.1.3",
    
    # Data validation and settings
    "pydantic>=2.5.2",
    "pydantic-settings>=2.1.0",
    
    # Hyperparameter optimization
    "optuna>=3.5.0",
    "optuna-integration>=3.5.0",
    
    # CLI and UX
    "typer>=0.9.0",
    "rich>=13.7.0",
    "tqdm>=4.66.0",
    
    # Visualization
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "plotly>=5.17.0",
    
    # Experiment tracking
    "wandb>=0.16.1",
    "tensorboard>=2.15.1",
    
    # Image and signal processing
    "opencv-python>=4.8.0",
    "pillow>=10.1.0",
    
    # File I/O and utilities
    "pyyaml>=6.0",
    "jsonlines>=4.0.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "pytest-asyncio>=0.21.0",
    
    # Code quality
    "black>=23.12.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "pylint>=3.0.0",
    
    # Pre-commit hooks
    "pre-commit>=3.3.0",
    
    # Documentation
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.scripts]
dlt = "dlt.cli:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "-v",
    "--tb=short",
    "--strict-markers",
    "--color=yes"
]
markers = [
    "torch: marks tests as requiring PyTorch",
    "tensorflow: marks tests as requiring TensorFlow", 
    "slow: marks tests as slow running",
    "gpu: marks tests as requiring GPU",
    "integration: marks tests as integration tests"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::FutureWarning"
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
